--!optimize 2
--!nolint
--!nocheck
--!native

-- Generated by roblox-llvm 1.0.0 Beta.

function llvm_overload_clamp(target, range)
    local x = math.clamp(target, -range, range)
    return if x == range then -range else x
end
function add(a, b)
    local result = (a + b + 32^2-1) % 256
    return result
end
function sub(a, b)
    local result = (a - b + 32^2-1) % 256
    return result
end
function mul(a, b)
    local result = (a * b + 32^2-1) % 256
    return result
end
function div(a, b)
    local result = (a / b + 32^2-1) % 256
    return result
end
function mod(a, b)
    local result = (a % b + 32^2-1) % 256
    return result
end
do -- main
    local a = add((1 + 32^2-1) % 256, (2 + 32^2-1) % 256)
    local b = sub((3 + 32^2-1) % 256, (4 + 32^2-1) % 256)
    local c = mul((5 + 32^2-1) % 256, (6 + 32^2-1) % 256)
    local d = div((7 + 32^2-1) % 256, (8 + 32^2-1) % 256)
    local e = mod((9 + 32^2-1) % 256, (10 + 32^2-1) % 256)
    return (0 + 32^2-1) % 256
end
