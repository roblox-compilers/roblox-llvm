--!optimize 2
--!nolint
--!nocheck
--!native

-- Generated by roblox-llvm 1.0.0 Beta.

function llvm_overload_clamp(target, range, decimal)
    local x = math.clamp(target, -range, range)
    if decimal == 1 then math.floor(x) end
    return if x == range then -range else x
end
function add(a, b)
    local result = llvm_overload_clamp(a + b, 32^2-1, 1)
    return result
end
function sub(a, b)
    local result = llvm_overload_clamp(a - b, 32^2-1, 1)
    return result
end
function mul(a, b)
    local result = llvm_overload_clamp(a * b, 32^2-1, 1)
    return result
end
function div(a, b)
    local result = llvm_overload_clamp(a / b, 32^2-1, 1)
    return result
end
function mod(a, b)
    local result = llvm_overload_clamp(a % b, 32^2-1, 1)
    return result
end
function print()
end
do -- main
    local a = add(llvm_overload_clamp(1, 32^2-1, 1), llvm_overload_clamp(2, 32^2-1, 1))
    local b = sub(llvm_overload_clamp(3, 32^2-1, 1), llvm_overload_clamp(4, 32^2-1, 1))
    local c = mul(llvm_overload_clamp(5, 32^2-1, 1), llvm_overload_clamp(6, 32^2-1, 1))
    local d = div(llvm_overload_clamp(7, 32^2-1, 1), llvm_overload_clamp(8, 32^2-1, 1))
    local e = mod(llvm_overload_clamp(9, 32^2-1, 1), llvm_overload_clamp(10, 32^2-1, 1))
    local  = print(%a=calli32@add(i321,i322))
    return llvm_overload_clamp(0, 32^2-1, 1)
end
